package auth

import "github.com/v3ronez/ufantasyai/view/layout"
import "os"
import "github.com/nedpals/supabase-go"

type LoginErrors struct {
	Email              string
	Password           string
	InvalidCredentials string
}

templ Login() {
	@layout.App(false) {
		<div class="flex justify-center h-screen">
			<div class="max-w-md w-full bg-base-300 py-12 p-8 rounded-xl m-auto">
				<h1 class="text-center text-xl font-black">Login to { os.Getenv("APP_NAME") }</h1>
				@LoginForm(supabase.UserCredentials{}, LoginErrors{})
			</div>
		</div>
	}
}

templ LoginForm(creds supabase.UserCredentials, err LoginErrors) {
	<form
		hx-post="/login"
		hx-swap="outerHTML"
	>
		<div class="w-full mb-5">
			<label class="form-control w-full">
				<div class="label">
					<span class="label-text">Email</span>
				</div>
				<input type="text" name="email" value={ creds.Email } placeholder="Email" class="input input-bordered w-full"/>
				if len(err.Email) > 0 {
					<div class="label">
						<span class="label-text-alt text-error">{ err.Email }</span>
					</div>
				}
			</label>
		</div>
		<div class="w-full mb-5">
			<label class="form-control w-full">
				<div class="label">
					<span class="label-text">Password</span>
				</div>
				<input type="password" name="password" placeholder="Password" class="input input-bordered w-full"/>
				if len(err.Password) > 0 {
					<div class="label">
						<span class="label-text-alt text-error">{ err.Password }</span>
					</div>
				}
			</label>
		</div>
		if len(err.InvalidCredentials) > 0 {
			<div class="text-sm text-center text-error mb-5">{ err.InvalidCredentials }</div>
		}
		<button type="submit" class="btn btn-primary w-full">Login <i class="fa-solid fa-arrow-right"></i></button>
		<div class="divider">OR</div>
		<a href="/login/provider/google" class="btn btn-accent w-full">Login<i class="fa-brands fa-google"></i></a>
		<div class="flex flex-col w-full border-opacity-50"></div>
	</form>
}

type SignUpErrors struct {
	Email              string
	Password           string
	ConfirmPassword    string
	InvalidCredentials string
}
type SignUpParam struct {
	Email           string
	Password        string
	ConfirmPassword string
}

templ SignUp() {
	@layout.App(false) {
		<div class="flex justify-center h-screen">
			<div class="max-w-md w-full bg-base-300 py-12 p-8 rounded-xl m-auto">
				<h1 class="text-center text-xl font-black">SignUp to { os.Getenv("APP_NAME") }</h1>
				@SignUpForm(supabase.UserCredentials{}, SignUpErrors{})
			</div>
		</div>
	}
}

templ SignUpForm(creds supabase.UserCredentials, err SignUpErrors) {
	<form
		hx-post="/signup"
		hx-swap="outerHTML"
	>
		<div class="w-full mb-5">
			<label class="form-control w-full">
				<div class="label">
					<span class="label-text">Email</span>
				</div>
				<input type="text" name="email" value={ creds.Email } placeholder="Email" class="input input-bordered w-full"/>
				if len(err.Email) > 0 {
					<div class="label">
						<span class="label-text-alt text-error">{ err.Email }</span>
					</div>
				}
			</label>
		</div>
		<div class="w-full mb-5">
			<label class="form-control w-full">
				<div class="label">
					<span class="label-text">Password</span>
				</div>
				<input type="password" name="password" placeholder="Password" class="input input-bordered w-full"/>
				if len(err.Password) > 0 {
					<div class="label">
						<span class="label-text-alt text-error">{ err.Password }</span>
					</div>
				}
			</label>
		</div>
		<div class="w-full mb-5">
			<label class="form-control w-full">
				<div class="label">
					<span class="label-text">Repeat Password</span>
				</div>
				<input type="password" name="confirm_password" placeholder="Password" class="input input-bordered w-full"/>
				if len(err.Password) > 0 {
					<div class="label">
						<span class="label-text-alt text-error">{ err.ConfirmPassword }</span>
					</div>
				}
			</label>
		</div>
		if len(err.InvalidCredentials) > 0 {
			<div class="text-sm text-center text-error mb-5">{ err.InvalidCredentials }</div>
		}
		<button type="submit" class="btn btn-primary w-full">Create account <i class="fa-solid fa-arrow-right"></i></button>
	</form>
}

templ SignUpSuccess(email string) {
	<div>You sign up successfully whith the email: <span class="font-semibold text-success">{ email }</span></div>
}

templ RedictCallBackScript() {
	<script>
		var url = window.location.href
		var newUrl = url.replace("#", "?")
		window.location = newUrl
	</script>
}

type AccountSetupFormParams struct {
	Username string
}

type AccountSetupErrors struct {
	Username string
}

templ AccountSetupForm(params AccountSetupFormParams, errs AccountSetupErrors) {
	<form hx-post="/account/setup" hx-swap="outerHTML">
		<label class="input input-bordered flex items-center gap-2 mb-4">
			<div class="label">
				<span class="label-text">Username</span>
			</div>
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="w-4 h-4 opacity-70"><path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6ZM12.735 14c.618 0 1.093-.561.872-1.139a6.002 6.002 0 0 0-11.215 0c-.22.578.254 1.139.872 1.139h9.47Z"></path></svg>
			<input type="text" name="username" value={ params.Username } class="grow"/>
			if len(errs.Username) > 0 {
				<div class="label">
					<span class="label-text-alt text-error">{ errs.Username }</span>
				</div>
			}
		</label>
		<button type="submit" class="btn btn-primary">Submit</button>
	</form>
}

templ AccountSetup() {
	@layout.App(true) {
		<div class="max-w-xl bg-base-300 px-6 py-12 rounded-xl w-full mx-auto mt-4">
			<h1 class="text-block text-xl font-black text-center mb-5">Setup your Account</h1>
			@AccountSetupForm(AccountSetupFormParams{}, AccountSetupErrors{})
		</div>
	}
}
