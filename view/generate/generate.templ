package generate

import "github.com/v3ronez/ufantasyai/view/layout"
import "github.com/v3ronez/ufantasyai/types"
import "fmt"

type ViewData struct {
	Images []types.Image
}

templ Index(viewData ViewData) {
	@layout.App(true) {
		<div class="flex w-full h-[calc(100vh-69px)]">
			<div class="w-[400px] border-r border-app">
				@Form()
			</div>
			<div class="flex-1 bg-base-300">
				@Gallery(viewData.Images)
			</div>
		</div>
	}
}

//generate a new image and append before the last child of hx-target
templ Form() {
	<form
		hx-post="/generate"
		hx-swap="beforeend"
		hx-target="#galery"
	>
		<div class="flex justify-center p-6">
			<button type="submit" class="btn btn-primary w-full">Generate</button>
		</div>
	</form>
}

templ Gallery(images []types.Image) {
	//create gallery
	<div class="grid grid-cols-4 p-4 gap-4 w-full" id="galery">
		for _, image := range images {
			@GalleryImage(image)
		}
	</div>
}

templ GalleryImage(image types.Image) {
	//single image props
	if image.Status == types.ImageStatusFailed {
		<div class="bg-red-500 aspect-[2/3] rounded-xl flex justify-center items-center">
			<i class="fa-solid fa-xmark text-3xl font-black text-slate-800"></i>
		</div>
	} else if   image.Status == types.ImageStatusPending {
		<div
			hx-get={ fmt.Sprintf("/generate/image/%d/status", image.ID) }
			hx-trigger="load delay:3s"
			class="bg-neutral aspect-[2/3] rounded-xl flex justify-center items-center"
		>
			<span class="loading loading-dots loading-lg"></span>
		</div>
	} else {
		<div class="bg-green-500 aspect-[2/3] rounded-xl"></div>
	}
}
